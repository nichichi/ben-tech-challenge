on:
  push:
    branches:
      - main
      - feature-ecr-ecs
    
# env:
#   ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#   SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#   REGION: 'ap-southeast-2'

name: Deploy to AWS
  
jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    
    steps:
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2
    
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Deploy Terraform
      run: make
      working-directory: ./terraform
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build and push image to ECR Repo
      id: build-image
      env:
        #ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        #ECR_REPO: "${{ aws ssm get-parameter --name /ben-tech-challenge/local/ecr-url --output text --query Parameter.Value }}"
        ECR_REPO: '${{ steps.login-ecr.outputs.registry }}/ben-tech-challenge-local-repo'
        #HASH: ${{ git rev-parse --long HEAD }}
        VERSION_TAG: ${{ git describe --tags }}
      working-directory: ./app
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPO:$VERSION_TAG .
        docker push $ECR_REPO:$VERSION_TAG
        echo "::set-output name=image::$ECR_REPO:$VERSION_TAG"